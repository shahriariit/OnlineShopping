using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.Entity;
using MvcStore.Models;

namespace MvcStore.Models
{
    public class SampleData : DropCreateDatabaseIfModelChanges<CopierStoreEntities>
    {
        protected override void Seed(CopierStoreEntities context)
        {
            var Brands = new List<Brand>
            {
                new Brand { Name = "Canon" },
                new Brand { Name = "Sharp" },
                new Brand { Name = "Ricoh" },
                new Brand { Name = "Toshiba" },
                new Brand { Name = "Kyocera" },
                new Brand { Name = "Konica" },
                new Brand { Name = "Xerox" },
                new Brand { Name = "Oce Plan Copiers" },
                new Brand { Name = "RedTop" },
                new Brand { Name = "YL" }
            };

            var Suppliers = new List<Supplier>
            {
                new Supplier { Name = "Canon" },
                new Supplier { Name = "Sharp" },
                new Supplier { Name = "Ricoh" },
                new Supplier { Name = "Toshiba" },
                new Supplier { Name = "Kyocera" },
                new Supplier { Name = "Konica" },
                new Supplier { Name = "Xerox" },
                new Supplier { Name = "Oce Plan Copiers" },
                new Supplier { Name = "RedTop" },
                new Supplier { Name = "YL" }
            }; 
 /*         
"Canon GPR-22 Black Toner Item Code: 0386B003AA" 
"Canon GPR-39 Black Toner Item Code: 2787B003AA "
"Canon GPR-35 Black Toner Item Code: 2785B003AA "
"Canon GPR-34 Black Toner Item Code: 2786B003AA "
"Canon GPR-16 Black Toner Item Code: 9634A003AA "
"Canon GPR-28 Black Toner Item Code: 1660B004BA"  
"Canon GPR-28 Magenta Toner Item Code: 1658B004BA" 
"Canon GPR-28 Yellow Toner Item Code: 1657B004BA "
"Canon GPR-36 Black Toner Item Code: 3782B003AA" 
"Canon GPR-36 Cyan Toner Item Code: 3783B003AA "    
"Canon GPR-36 Magenta Toner Item Code: 3784B003AA"   
"Canon GPR-36 Yellow Toner Item Code: 3785B003AA"
"Canon GPR-23 Cyan Toner Item Code: 0453B003AA" 
"Canon GPR-23 Yellow Toner Item Code: 0455B003AA" 
"Canon GPR-23 Magenta Toner Item Code: 0454B003AA" 
"Canon GPR-23 Black TonerItem Code: 0452B003AA "
"Canon GPR-31 Yellow Toner Item Code: 2802B003AA"
"Canon GPR-31 Black Toner Item Code: 2790B003AA "
"Canon GPR-31 Cyan Toner Item Code: 2794B003AA "
"Canon GPR-31 Magenta Toner Item Code: 2798B003AA"                                  
"Canon GPR-30 Black Toner Item Code: 2789B003AA "
"Canon GPR-30 Magenta Toner Item Code: 2797B003AA"
"Canon GPR-30 Cyan Toner Item Code: 2793B003AA  "
"Canon GPR-30 Yellow Toner Item Code: 2801B003AA "
"Canon GPR-33 Yellow Toner Item Code: 2804B003AA"
"Canon GPR-33 Magenta Toner Item Code: 2800B003AA" 
"Canon GPR-33 Cyan Toner Item Code: 2796B003AA"
"Canon GPR-33 Black Toner Item Code: 2792B003AA" 
"Canon GPR-32 Black Toner Item Code: 2791B003AA"
"Canon GPR-32 Cyan Toner Item Code: 2795B003AA"
"Canon GPR-32 Magenta Toner Item Code: 2799B003AA"
"Canon GPR-32 Yellow Toner Item Code: 2803B003AA" 
"Canon GPR-48 Black Toner Item Code: 2788B003AA" 
"Canon GPR-43 Black Toner Item Code: 4792B003AA" 
"Canon GPR-38 Black Toner Item Code: 3766B003AA "
"Canon GPR-19 Toner Black Item Code: 0387B003AA "
*/


            var Toners = new List<Toner>
            {
                new Toner { Name = "Canon GPR-22 Black Toner Item Code: 0386B003AA " },
                new Toner { Name = "Canon GPR-39 Black Toner Item Code: 2787B003AA " },
                new Toner { Name = "Canon GPR-35 Black Toner Item Code: 2785B003AA " },
                new Toner { Name = "Canon GPR-34 Black Toner Item Code: 2786B003AA " },
                new Toner { Name = "Canon GPR-16 Black Toner Item Code: 9634A003AA " },
                new Toner { Name = "Canon GPR-28 Black Toner Item Code: 1660B004BA  " },
                new Toner { Name = "Canon GPR-28 Magenta Toner Item Code: 1658B004BA" },
                new Toner { Name = "Canon GPR-28 Magenta Toner Item Code: 1658B004BA" },
                new Toner { Name = "Canon GPR-28 Yellow Toner Item Code: 1657B004BA " },
                new Toner { Name = "Alice In Chains" },
                new Toner { Name = "Amy Winehouse" },
                new Toner { Name = "Anita Ward" },
                new Toner { Name = "Antônio Carlos Jobim" },
                new Toner { Name = "Apocalyptica" },
                new Toner { Name = "Audioslave" },
                new Toner { Name = "Barry Wordsworth & BBC Concert Orchestra" },
                new Toner { Name = "Berliner Philharmoniker & Hans Rosbaud" },
                new Toner { Name = "Berliner Philharmoniker & Herbert Von Karajan" },
                new Toner { Name = "Billy Cobham" },
                new Toner { Name = "Black Label Society" },
                new Toner { Name = "Black Sabbath" },
                new Toner { Name = "Boston Symphony Orchestra & Seiji Ozawa" },
                new Toner { Name = "Britten Sinfonia, Ivor Bolton & Lesley Garrett" },
                new Toner { Name = "Bruce Dickinson" },
                new Toner { Name = "Buddy Guy" },
                new Toner { Name = "Caetano Veloso" },
                new Toner { Name = "Cake" },
                new Toner { Name = "Calexico" },
                new Toner { Name = "Cássia Eller" },
                new Toner { Name = "Chic" },
                new Toner { Name = "Chicago Symphony Orchestra & Fritz Reiner" },
                new Toner { Name = "Chico Buarque" },
                new Toner { Name = "Chico Science & Nação Zumbi" },
                new Toner { Name = "Choir Of Westminster Abbey & Simon Preston" },
                new Toner { Name = "Chris Cornell" },
                new Toner { Name = "Christopher O'Riley" },
                new Toner { Name = "Cidade Negra" },
                new Toner { Name = "Cláudio Zoli" },
                new Toner { Name = "Creedence Clearwater Revival" },
                new Toner { Name = "David Coverdale" },
                new Toner { Name = "Deep Purple" },
                new Toner { Name = "Dennis Chambers" },
                new Toner { Name = "Djavan" },
                new Toner { Name = "Donna Summer" },
                new Toner { Name = "Dread Zeppelin" },
                new Toner { Name = "Ed Motta" },
                new Toner { Name = "Edo de Waart & San Francisco Symphony" },
                new Toner { Name = "Elis Regina" },
                new Toner { Name = "English Concert & Trevor Pinnock" },
                new Toner { Name = "Eric Clapton" },
                new Toner { Name = "Eugene Ormandy" },
                new Toner { Name = "Faith No More" },
                new Toner { Name = "Falamansa" },
                new Toner { Name = "Foo Fighters" },
                new Toner { Name = "Frank Zappa & Captain Beefheart" },
                new Toner { Name = "Fretwork" },
                new Toner { Name = "Funk Como Le Gusta" },
                new Toner { Name = "Gerald Moore" },
                new Toner { Name = "Gilberto Gil" },
                new Toner { Name = "Godsmack" },
                new Toner { Name = "Gonzaguinha" },
                new Toner { Name = "Göteborgs Symfoniker & Neeme Järvi" },
                new Toner { Name = "Guns N' Roses" },
                new Toner { Name = "Gustav Mahler" },
                new Toner { Name = "Incognito" },
                new Toner { Name = "Iron Maiden" },
                new Toner { Name = "James Levine" },
                new Toner { Name = "Jamiroquai" },
                new Toner { Name = "Jimi Hendrix" },
                new Toner { Name = "Joe Satriani" },
                new Toner { Name = "Jorge Ben" },
                new Toner { Name = "Jota Quest" },
                new Toner { Name = "Judas Priest" },
                new Toner { Name = "Julian Bream" },
                new Toner { Name = "Kent Nagano and Orchestre de l'Opéra de Lyon" },
                new Toner { Name = "Kiss" },
                new Toner { Name = "Led Zeppelin" },
                new Toner { Name = "Legião Urbana" },
                new Toner { Name = "Lenny Kravitz" },
                new Toner { Name = "Les Arts Florissants & William Christie" },
                new Toner { Name = "London Symphony Orchestra & Sir Charles Mackerras" },
                new Toner { Name = "Luciana Souza/Romero Lubambo" },
                new Toner { Name = "Lulu Santos" },
                new Toner { Name = "Marcos Valle" },
                new Toner { Name = "Marillion" },
                new Toner { Name = "Marisa Monte" },
                new Toner { Name = "Martin Roscoe" },
                new Toner { Name = "Maurizio Pollini" },
                new Toner { Name = "Mela Tenenbaum, Pro Musica Prague & Richard Kapp" },
                new Toner { Name = "Men At Work" },
                new Toner { Name = "Metallica" },
                new Toner { Name = "Michael Tilson Thomas & San Francisco Symphony" },
                new Toner { Name = "Miles Davis" },
                new Toner { Name = "Milton Nascimento" },
                new Toner { Name = "Mötley Crüe" },
                new Toner { Name = "Motörhead" },
                new Toner { Name = "Nash Ensemble" },
                new Toner { Name = "Nicolaus Esterhazy Sinfonia" },
                new Toner { Name = "Nirvana" },
                new Toner { Name = "O Terço" },
                new Toner { Name = "Olodum" },
                new Toner { Name = "Orchestra of The Age of Enlightenment" },
                new Toner { Name = "Os Paralamas Do Sucesso" },
                new Toner { Name = "Ozzy Osbourne" },
                new Toner { Name = "Page & Plant" },
                new Toner { Name = "Paul D'Ianno" },
                new Toner { Name = "Pearl Jam" },
                new Toner { Name = "Pink Floyd" },
                new Toner { Name = "Queen" },
                new Toner { Name = "R.E.M." },
                new Toner { Name = "Raul Seixas" },
                new Toner { Name = "Red Hot Chili Peppers" },
                new Toner { Name = "Roger Norrington, London Sharp Players" },
                new Toner { Name = "Royal Philharmonic Orchestra & Sir Thomas Beecham" },
                new Toner { Name = "Rush" },
                new Toner { Name = "Santana" },
                new Toner { Name = "Scholars Baroque Ensemble" },
                new Toner { Name = "Scorpions" },
                new Toner { Name = "Sergei Prokofiev & Yuri Temirkanov" },
                new Toner { Name = "Sir Georg Solti & Wiener Philharmoniker" },
                new Toner { Name = "Skank" },
                new Toner { Name = "Soundgarden" },
                new Toner { Name = "Spyro Gyra" },
                new Toner { Name = "Stevie Ray Vaughan & Double Trouble" },
                new Toner { Name = "Stone Temple Pilots" },
                new Toner { Name = "System Of A Down" },
                new Toner { Name = "Temple of the Dog" },
                new Toner { Name = "Terry Bozzio, Tony Levin & Steve Stevens" },
                new Toner { Name = "The 12 Cellists of The Berlin Philharmonic" },
                new Toner { Name = "The Black Crowes" },
                new Toner { Name = "The Cult" },
                new Toner { Name = "The Doors" },
                new Toner { Name = "The King's Singers" },
                new Toner { Name = "The Police" },
                new Toner { Name = "The Posies" },
                new Toner { Name = "The Rolling Stones" },
                new Toner { Name = "The Who" },
                new Toner { Name = "Tim Maia" },
                new Toner { Name = "Ton Koopman" },
                new Toner { Name = "U2" },
                new Toner { Name = "UB40" },
                new Toner { Name = "Van Halen" },
                new Toner { Name = "Various Toners" },
                new Toner { Name = "Velvet Revolver" },
                new Toner { Name = "Vinícius De Moraes" },
                new Toner { Name = "Wilhelm Kempff" },
                new Toner { Name = "Yehudi Menuhin" },
                new Toner { Name = "Yo-Yo Ma" },
                new Toner { Name = "Zeca Pagodinho" }
            };

           new List<Model>
            {
                new Model { ProductName = "A Copland Celebration, Vol. I", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Aaron Copland & London Symphony Orchestra"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Worlds", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Aaron Goldberg"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "For Those About To Canon We Salute You", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "AC/DC"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Let There Be Canon", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "AC/DC"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Balls to the Wall", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Accept"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Restless and Wild", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Accept"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Górecki: Symphony No. 3", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Adrian Leaper & Doreen de Feis"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Big Ones", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Aerosmith"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Quiet Songs", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Aisha Duo"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Jagged Little Pill", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Alanis Morissette"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Facelift", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Alice In Chains"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Frank", Brand = Brands.Single(g => g.Name == "Pop"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Amy Winehouse"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Ring My Bell", Brand = Brands.Single(g => g.Name == "Disco"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Anita Ward"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Chill: Brazil (Disc 2)", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Antônio Carlos Jobim"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Warner 25 Anos", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Antônio Carlos Jobim"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Plays Metallica By Four Cellos", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Apocalyptica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Revelations", Brand = Brands.Single(g => g.Name == "Alternative"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Audioslave"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Audioslave", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Audioslave"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Last Night of the Proms", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Barry Wordsworth & BBC Concert Orchestra"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Sibelius: Finlandia", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Berliner Philharmoniker & Hans Rosbaud"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Mozart: Symphonies Nos. 40 & 41", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Berliner Philharmoniker & Herbert Von Karajan"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Best Of Billy Cobham", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Billy Cobham"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Alcohol Fueled Brewtality Live! [Disc 1]", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Black Label Society"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Alcohol Fueled Brewtality Live! [Disc 2]", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Black Label Society"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Black Sabbath Vol. 4 (Remaster)", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Black Sabbath"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Black Sabbath", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Black Sabbath"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Carmina Burana", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Boston Symphony Orchestra & Seiji Ozawa"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "A Soprano Inspired", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Britten Sinfonia, Ivor Bolton & Lesley Garrett"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Chemical Wedding", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Bruce Dickinson"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Prenda Minha", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Caetano Veloso"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Sozinho Remix Ao Vivo", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Caetano Veloso"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Cake: B-Sides and Rarities", Brand = Brands.Single(g => g.Name == "Alternative"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Cake"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Carried to Dust (Bonus Track Version)", Brand = Brands.Single(g => g.Name == "Alternative"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Calexico"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Cássia Eller - Sem Limite [Disc 1]", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Cássia Eller"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Le Freak", Brand = Brands.Single(g => g.Name == "Disco"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Chic"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Scheherazade", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Chicago Symphony Orchestra & Fritz Reiner"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Minha Historia", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Chico Buarque"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Afrociberdelia", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Chico Science & Nação Zumbi"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Da Lama Ao Caos", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Chico Science & Nação Zumbi"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Carry On", Brand = Brands.Single(g => g.Name == "Alternative"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Chris Cornell"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "SCRIABIN: Vers la flamme", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Christopher O'Riley"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Acústico MTV [Live]", Brand = Brands.Single(g => g.Name == "Reggae"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Cidade Negra"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Cidade Negra - Hits", Brand = Brands.Single(g => g.Name == "Reggae"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Cidade Negra"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Na Pista", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Cláudio Zoli"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Chronicle, Vol. 1", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Creedence Clearwater Revival"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Chronicle, Vol. 2", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Creedence Clearwater Revival"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Into The Light", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "David Coverdale"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Come Taste The Band", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Deep Purple In Canon", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Fireball", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Machine Head", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "MK III The Final Concerts [Disc 1]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Purpendicular", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Slaves And Masters", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Stormbringer", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Battle Rages On", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Final Concerts (Disc 2)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Deep Purple"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Outbreak", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Dennis Chambers"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Djavan Ao Vivo - Vol. 02", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Djavan"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Djavan Ao Vivo - Vol. 1", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Djavan"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "MacArthur Park Suite", Brand = Brands.Single(g => g.Name == "Disco"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Donna Summer"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Un-Led-Ed", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Dread Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Best of Ed Motta", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ed Motta"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Adams, John: The Chairman Dances", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Edo de Waart & San Francisco Symphony"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Elis Regina-Minha História", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Elis Regina"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Pachelbel: Canon & Gigue", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "English Concert & Trevor Pinnock"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Unplugged", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Eric Clapton"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Cream Of Clapton", Brand = Brands.Single(g => g.Name == "Blues"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Eric Clapton"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Unplugged", Brand = Brands.Single(g => g.Name == "Blues"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Eric Clapton"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Respighi:Pines of Rome", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Eugene Ormandy"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Strauss: Waltzes", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Eugene Ormandy"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "King For A Day Fool For A Lifetime", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Faith No More"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Deixa Entrar", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Falamansa"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "In Your Honor [Disc 1]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Foo Fighters"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "In Your Honor [Disc 2]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Foo Fighters"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Colour And The Shape", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Foo Fighters"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bongo Fury", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Frank Zappa & Captain Beefheart"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Roda De Funk", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Funk Como Le Gusta"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Quanta Gente Veio Ver (Live)", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Gilberto Gil"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Quanta Gente Veio ver--Bônus De Carnaval", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Gilberto Gil"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Faceless", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Godsmack"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Meus Momentos", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Gonzaguinha"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Nielsen: The Six Symphonies", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Göteborgs Symfoniker & Neeme Järvi"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Appetite for Destruction", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Guns N' Roses"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Use Your Illusion I", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Guns N' Roses"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Use Your Illusion II", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Guns N' Roses"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Blue Moods", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Incognito"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "A Matter of Life and Death", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Brave New World", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Fear Of The Dark", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Live At Donington 1992 (Disc 1)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Live At Donington 1992 (Disc 2)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Canon In Rio [CD2]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Number of The Beast", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The X Factor", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Virtual XI", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "A Real Dead One", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "A Real Live One", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Live After Death", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "No Prayer For The Dying", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Piece Of Mind", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Powerslave", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Canon In Rio [CD1]", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Canon In Rio [CD2]", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Seventh Son of a Seventh Son", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Somewhere in Time", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Number of The Beast", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Iron Maiden", Brand = Brands.Single(g => g.Name == "Blues"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Iron Maiden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Mascagni: Cavalleria Rusticana", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "James Levine"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Emergency On Planet Earth", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Jamiroquai"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Are You Experienced?", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Jimi Hendrix"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Surfing with the Alien (Remastered)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Joe Satriani"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Jorge Ben Jor 25 Anos", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Jorge Ben"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Jota Quest-1995", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Jota Quest"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Living After Midnight", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Judas Priest"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Weill: The Seven Deadly Sins", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Kent Nagano and Orchestre de l'Opéra de Lyon"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Greatest Kiss", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Kiss"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Unplugged [Live]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Kiss"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "BBC Sessions [Disc 1] [Live]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "BBC Sessions [Disc 2] [Live]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Coda", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Houses Of The Holy", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "In Through The Out Door", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "IV", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Led Zeppelin I", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Led Zeppelin II", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Led Zeppelin III", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Physical Graffiti [Disc 1]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Physical Graffiti [Disc 2]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Presence", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Song Remains The Same (Disc 1)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Song Remains The Same (Disc 2)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Led Zeppelin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Mais Do Mesmo", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Legião Urbana"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Greatest Hits", Brand = Brands.Single(g => g.Name == "Reggae"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Lenny Kravitz"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Greatest Hits", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Lenny Kravitz"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Greatest Hits", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Lenny Kravitz"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Tchaikovsky: The Nutcracker", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "London Symphony Orchestra & Sir Charles Mackerras"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Duos II", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Luciana Souza/Romero Lubambo"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Chill: Brazil (Disc 1)", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Marcos Valle"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Misplaced Childhood", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Marillion"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Barulhinho Bom", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Marisa Monte"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Szymanowski: Piano Works, Vol. 1", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Martin Roscoe"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Best Of Men At Work", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Men At Work"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "...And Justice For All", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Black Model", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Garage Inc. (Disc 1)", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Garage Inc. (Disc 2)", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Load", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Master Of Puppets", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "ReLoad", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Ride The Lightning", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "St. Anger", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Metallica"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Berlioz: Symphonie Fantastique", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Michael Tilson Thomas & San Francisco Symphony"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Prokofiev: Romeo & Juliet", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Michael Tilson Thomas & San Francisco Symphony"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Miles Ahead", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Miles Davis"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Essential Miles Davis [Disc 1]", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Miles Davis"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Essential Miles Davis [Disc 2]", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Miles Davis"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Milton Nascimento Ao Vivo", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Milton Nascimento"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Minas", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Milton Nascimento"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Motley Crue Greatest Hits", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Mötley Crüe"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Ace Of Spades", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Motörhead"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Mozart: Chamber Music", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Nash Ensemble"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Best of Beethoven", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Nicolaus Esterhazy Sinfonia"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Nevermind", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Nirvana"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Compositores", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "O Terço"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Olodum", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Olodum"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bach: The Brandenburg Concertos", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Orchestra of The Age of Enlightenment"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Acústico MTV", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Os Paralamas Do Sucesso"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Arquivo II", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Os Paralamas Do Sucesso"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Arquivo Os Paralamas Do Sucesso", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Os Paralamas Do Sucesso"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Tribute", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ozzy Osbourne"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bark at the Moon (Remastered)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ozzy Osbourne"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Blizzard of Ozz", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ozzy Osbourne"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Diary of a Madman (Remastered)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ozzy Osbourne"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "No More Tears (Remastered)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ozzy Osbourne"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Speak of the Devil", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ozzy Osbourne"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Walking Into Clarksdale", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Page & Plant"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Beast Live", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Paul D'Ianno"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Live On Two Legs [Live]", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Pearl Jam"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Riot Act", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Pearl Jam"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Ten", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Pearl Jam"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Vs.", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Pearl Jam"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Dark Side Of The Moon", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Pink Floyd"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Greatest Hits I", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Queen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Greatest Hits II", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Queen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "News Of The World", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Queen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "New Adventures In Hi-Fi", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "R.E.M."),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Raul Seixas", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Raul Seixas"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "By The Way", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Red Hot Chili Peppers"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Californication", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Red Hot Chili Peppers"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Purcell: The Fairy Queen", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Roger Norrington, London Sharp Players"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Haydn: Symphonies 99 - 104", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Royal Philharmonic Orchestra & Sir Thomas Beecham"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Retrospective I (1974-1980)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Rush"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Santana - As Years Go By", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Santana"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Santana Live", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Santana"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Supernatural", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Santana"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Handel: The Messiah (Highlights)", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Scholars Baroque Ensemble"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Prokofiev: Symphony No.1", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Sergei Prokofiev & Yuri Temirkanov"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Wagner: Favourite Overtures", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Sir Georg Solti & Wiener Philharmoniker"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Maquinarama", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Skank"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "O Samba Poconé", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Skank"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "A-Sides", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Soundgarden"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Heart of the Night", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Spyro Gyra"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Morning Dance", Brand = Brands.Single(g => g.Name == "Toshiba"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Spyro Gyra"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "In Step", Brand = Brands.Single(g => g.Name == "Blues"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Stevie Ray Vaughan & Double Trouble"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Core", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Stone Temple Pilots"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Mezmerize", Brand = Brands.Single(g => g.Name == "Metal"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "System Of A Down"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Temple of the Dog", Brand = Brands.Single(g => g.Name == "Alternative"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Temple of the Dog"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "[1997] Black Light Syndrome", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Terry Bozzio, Tony Levin & Steve Stevens"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "South American Getaway", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The 12 Cellists of The Berlin Philharmonic"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Live [Disc 1]", Brand = Brands.Single(g => g.Name == "Blues"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Black Crowes"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Live [Disc 2]", Brand = Brands.Single(g => g.Name == "Blues"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Black Crowes"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Beyond Good And Evil", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Cult"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Doors", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Doors"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "English Renaissance", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The King's Singers"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Police Greatest Hits", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Police"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Every Kind of Light", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Posies"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Hot Canons, 1964-1971 (Disc 1)", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Rolling Stones"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "No Security", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Rolling Stones"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Voodoo Lounge", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Rolling Stones"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "My Generation - The Very Best Of The Who", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "The Who"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Serie Sem Limite (Disc 1)", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Tim Maia"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Serie Sem Limite (Disc 2)", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Tim Maia"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bach: Toccata & Fugue in D Minor", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Ton Koopman"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Achtung Baby", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "B-Sides 1980-1990", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "How To Dismantle An Atomic Bomb", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Pop", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Rattle And Hum", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Best Of 1980-1990", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "War", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Zooropa", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "U2"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "UB40 The Best Of - Volume Two [UK]", Brand = Brands.Single(g => g.Name == "Reggae"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "UB40"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Diver Down", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Van Halen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "The Best Of Van Halen, Vol. I", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Van Halen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Van Halen III", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Van Halen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Van Halen", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Van Halen"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Axé Bahia 2001", Brand = Brands.Single(g => g.Name == "Pop"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Various Toners"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Sambas De Enredo 2001", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Various Toners"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Vozes do MPB", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Various Toners"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Contraband", Brand = Brands.Single(g => g.Name == "Canon"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Velvet Revolver"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Vinicius De Moraes", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Vinícius De Moraes"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bach: Goldberg Variations", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Wilhelm Kempff"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bartok: Violin & Viola Concertos", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Yehudi Menuhin"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Bach: The Cello Suites", Brand = Brands.Single(g => g.Name == "Sharp"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Yo-Yo Ma"),ModelUrl = "/Content/Images/placeholder.gif" },
                new Model { ProductName = "Ao Vivo [IMPORT]", Brand = Brands.Single(g => g.Name == "Latin"), Price = 8.99M, Toner = Toners.Single(a => a.Name == "Zeca Pagodinho"),ModelUrl = "/Content/Images/placeholder.gif" },
            }.ForEach(a => context.Models.Add(a));
        }
    }
}